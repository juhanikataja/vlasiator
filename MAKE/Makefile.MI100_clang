#Load these paths
#export LD_LIBRARY_PATH=/opt/rocm/lib:/opt/rocm/lib
#export PATH=/scratch/shared/spack/opt/spack/linux-sle_hpc15-zen/gcc-7.5.0/openmpi-4.1.1-v4rywn7k2dajndpxcxagudjjx2huajwk/bin:/scratch/shared/spack/opt/spack/linux-sle_hpc15-zen/gcc-7.5.0/openmpi-4.1.1-v4rywn7k2dajndpxcxagudjjx2huajwk/bin

#======== Vectorization ==========
#Set vector backend type for vlasov solvers, sets precision and length.
#Options:
# AVX:	    VEC4D_AGNER, VEC4F_AGNER, VEC8F_AGNER
# AVX512:   VEC8D_AGNER, VEC16F_AGNER
# Fallback: VEC4D_FALLBACK, VEC4F_FALLBACK, VEC8F_FALLBACK

ifeq ($(DISTRIBUTION_FP_PRECISION),SPF)
#Single-precision
	VECTORCLASS = VEC8F_FALLBACK
else
#Double-precision
	VECTORCLASS = VEC4D_FALLBACK
endif

#======== PAPI ==========
#Add PAPI_MEM define to use papi to report memory consumption?
#CXXFLAGS += -DPAPI_MEM
#testpackage: CXXFLAGS += -DPAPI_MEM

#======== Allocator =========
#Use jemalloc instead of system malloc to reduce memory fragmentation https://github.com/jemalloc/jemalloc
#Configure jemalloc with  --with-jemalloc-prefix=je_ when installing it
#CXXFLAGS += -DUSE_JEMALLOC -DJEMALLOC_NO_DEMANGLE

#======= Compiler and compilation flags =========
# NOTES on compiler flags:
# CXXFLAGS is for compiler flags, they are always used
# MATHFLAGS are for special math etc. flags, these are only applied on solver functions
# LDFLAGS flags for linker

#-DNO_WRITE_AT_ALL:  Define to disable write at all to
#                    avoid memleak (much slower IO)
#-DMPICH_IGNORE_CXX_SEEK: Ignores some multiple definition
#                         errors that come up when using
#                         mpi.h in c++ on Cray

#FLAGS =
CC = mpic++
CXX = mpic++
NVCC = hipcc
CUDAFLAGS +=  -O3 -std=c++11 
CMP = mpic++
LNK = mpic++

#GNU flags:
CC_BRAND = gnu
CC_BRAND_VERSION = 7.5.0
CXXFLAGS += -g -O3 -D__GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1 -std=c++11
#-Minfo=accel -ta=tesla:lineinfo,keepbin,keepgpu,keepptx -Manno -g -nomp
testpackage: CXXFLAGS += -g -O3 -D__GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1 -std=c++11
testpackage: CUDAFLAGS += -std=c++11

MATHFLAGS =
LDFLAGS = -O2 
#LIB_MPI = -lmpi -L/scratch/shared/spack/opt/spack/linux-sle_hpc15-zen/gcc-7.5.0/openmpi-4.1.1-v4rywn7k2dajndpxcxagudjjx2huajwk/lib
LIB_MPI = $(shell mpicc --showme:link)

CXXFLAGS += $(shell mpicc --showme:compile) 
CXXFLAGS += -fopenmp

# BOOST_VERSION = current trilinos version
# ZOLTAN_VERSION = current trilinos verson

#======== Libraries ===========
MPT_BRAND = openmpi
MPT_VERSION = 4.1.1
#JEMALLOC_VERSION = 4.0.4
LIBRARY_PREFIX = /scratch/vlasiator/libraries
#LIBRARY_PREFIX2 = /projappl/project_2002873/libraries/clang/10.0.0

#compiled libraries
#LIB_PAPI = -I/$(LIBRARY_PREFIX2)/papi/include -lpapi
#INC_PAPI = -L/$(LIBRARY_PREFIX2)/papi/lib

INC_BOOST = -I$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/boost/include
LIB_BOOST = -L$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/boost/lib -lboost_program_options -Wl,-rpath=$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/boost/lib

INC_ZOLTAN = -I$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/zoltan/include
LIB_ZOLTAN = -L$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/zoltan/lib -lzoltan -Wl,-rpath=$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/boost/lib

INC_JEMALLOC = -I$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/jemalloc/include
LIB_JEMALLOC = -L$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/jemalloc/lib -ljemalloc -Wl,-rpath=$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/jemalloc/lib

INC_VLSV = -I$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/vlsv
LIB_VLSV = -L$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/vlsv -lvlsv -Wl,-rpath=$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/vlsv/lib

LIB_PROFILE = -L$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/phiprof/lib -lphiprof -Wl,-rpath=$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/phiprof/lib
INC_PROFILE = -I$(LIBRARY_PREFIX)/$(CC_BRAND)/$(CC_BRAND_VERSION)/$(MPT_BRAND)/$(MPT_VERSION)/phiprof/include

#LIB_CUDA = -L/usr/local/cuda/lib64 -lcuda -lcudart

#header libraries
INC_EIGEN = -I$(LIBRARY_PREFIX)/eigen
INC_DCCRG = -I$(LIBRARY_PREFIX)/dccrg
INC_FSGRID = -I$(LIBRARY_PREFIX)/fsgrid
